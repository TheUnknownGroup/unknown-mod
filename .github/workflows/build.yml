name: Build v0.1.1
on:
  push:
    branches:
      main
  workflow_dispatch:
  
env:
  version: "0.1.1"
  ver: "V0.1.1 MCV-1.20.5 Fabric"
  tag: "0.1.1-1.20.5+build.1"
  java_ver: "21"

jobs:
  build-all:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew build

      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: all
          path: |
            fabric/build/libs/
            forge/build/libs/
            quilt/build/libs/
          retention-days: 1

  build-fabric:
    if: ${{ contains(github.event.head_commit.message, '[fab]') }}

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew :fabric:build

      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fabric
          path: fabric/build/libs/
          retention-days: 1

  build-forge:
    if: ${{ contains(github.event.head_commit.message, '[for]') }}
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew :forge:build

      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: forge
          path: forge/build/libs/
          retention-days: 1

  build-quilt:
    if: ${{ contains(github.event.head_commit.message, '[qui]') }}
    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: build
        run: ./gradlew :quilt:build

      - name: capture build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: quilt
          path: quilt/build/libs/
          retention-days: 1

  modrinth-all:
    if: ${{ contains(github.event.head_commit.message, '[m]') }}

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Publish to Modrinth
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: |
          ./gradlew :fabric:modrinth -Ptoken="${{ env.TOKEN }}"
          ./gradlew :forge:modrinth -Ptoken="${{ env.TOKEN }}"
          ./gradlew :quilt:modrinth -Ptoken="${{ env.TOKEN }}"

  modrinth-fabric:
    if: ${{ contains(github.event.head_commit.message, '[fab]') }}

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
    - name: checkout repository
      uses: actions/checkout@v4

    - name: validate gradle wrapper
      uses: gradle/actions/wrapper-validation@v4

    - name: setup jdk
      uses: actions/setup-java@v4
      with:
        java-version: ${{ env.java_ver }}
        distribution: 'temurin'

    - name: make gradle wrapper executable
      run: chmod +x ./gradlew

    - name: Publish to Modrinth
      env:
        TOKEN: ${{ secrets.TOKEN }}
      run: ./gradlew :fabric:modrinth -Ptoken="${{ env.TOKEN }}"

  modrinth-forge:
    if: ${{ contains(github.event.head_commit.message, '[for]') }}

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Publish to Modrinth
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: ./gradlew :forge:modrinth -Ptoken="${{ env.TOKEN }}"

  modrinth-quilt:
    if: ${{ contains(github.event.head_commit.message, '[qui]') }}

    permissions:
      contents: write

    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.java_ver }}
          distribution: 'temurin'

      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Publish to Modrinth
        env:
          TOKEN: ${{ secrets.TOKEN }}
        run: ./gradlew :quilt:modrinth -Ptoken="${{ env.TOKEN }}"

  release-all:
    if: ${{ !contains(github.event.head_commit.message, '[skip]') }}

    permissions:
      contents: write

    needs: [ build-all ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download Files
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Unknown Mod ${{ env.ver }}
          tag_name: ${{ env.tag }}
          body_path: ${{ github.workspace }}/changelog.md
          draft: true
          generate_release_notes: true
          files: |
            all/**/*.jar
            
  release-fabric:
    if: ${{ contains(github.event.head_commit.message, '[fab]') }}

    permissions:
      contents: write

    needs: [ build-fabric ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download Files
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Unknown Mod ${{ env.ver }}
          tag_name: ${{ env.tag }}
          body_path: ${{ github.workspace }}/changelog.md
          draft: true
          generate_release_notes: true
          files: |
            fabric/*.jar

  release-forge:
    if: ${{ contains(github.event.head_commit.message, '[for]') }}

    permissions:
      contents: write

    needs: [ build-forge ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download Files
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Unknown Mod ${{ env.ver }}
          tag_name: ${{ env.tag }}
          body_path: ${{ github.workspace }}/changelog.md
          draft: true
          generate_release_notes: true
          files: |
            forge/*.jar

  release-quilt:
    if: ${{ contains(github.event.head_commit.message, '[qui]') }}

    permissions:
      contents: write

    needs: [ build-quilt ]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download Files
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: Unknown Mod ${{ env.ver }}
          tag_name: ${{ env.tag }}
          body_path: ${{ github.workspace }}/changelog.md
          draft: true
          generate_release_notes: true
          files: |
            quilt/*.jar